import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# 1. Análisis exploratorio de datos (EDA)
df = pd.read_csv('sales_data.csv')
print("Primeras filas del dataset:")
print(df.head())
print("Información general del dataset:")
print(df.info())
print("Descripción estadística:")
print(df.describe())

# Visualización de datos
plt.figure(figsize=(10,5))
sns.histplot(df['ventas'], bins=30, kde=True)
plt.title('Distribución de Ventas')
plt.show()

# 2. Análisis de correlación y regresión en datos financieros
df_corr = df.corr()
plt.figure(figsize=(8,6))
sns.heatmap(df_corr, annot=True, cmap='coolwarm', fmt='.2f')
plt.title('Matriz de Correlación')
plt.show()

# Regresión lineal
X = df[['gasto_marketing', 'num_clientes']]
y = df['ventas']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
regressor = LinearRegression()
regressor.fit(X_train, y_train)
y_pred = regressor.predict(X_test)

print("Error cuadrático medio:", mean_squared_error(y_test, y_pred))
print("R2 Score:", r2_score(y_test, y_pred))

# 3. Clasificación de datos usando un modelo de Machine Learning
df['categoria_ventas'] = np.where(df['ventas'] > df['ventas'].median(), 1, 0)
X = df[['gasto_marketing', 'num_clientes']]
y = df['categoria_ventas']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

clf = RandomForestClassifier(n_estimators=100, random_state=42)
clf.fit(X_train, y_train)
y_pred = clf.predict(X_test)

print("Accuracy Score:", accuracy_score(y_test, y_pred))
print("Reporte de Clasificación:")
print(classification_report(y_test, y_pred))
